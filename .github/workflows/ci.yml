name: ci
on: [push, pull_request]
jobs:
  make-build:
    strategy:
      matrix:
        platform: [ubuntu-latest, macos-latest]
    runs-on: ${{ matrix.platform }}
    steps:
      - uses: actions/checkout@v2
      - name: initAndClone
        run: |
          git clone --depth=1 https://github.com/sisong/HDiffPatch.git ../HDiffPatch
      - name: makeAll
        run: |
          make -j

  clang-build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: installClang
        run: |
          sudo apt-get install -y llvm clang
      - name: initAndClone
        run: |
          git clone --depth=1 https://github.com/sisong/HDiffPatch.git ../HDiffPatch
      - name: makeByClang
        run: |
          make CL=1 -j

  xcode-build:
    runs-on: macos-latest
    steps:
      - uses: actions/checkout@v2
      - name: initAndClone
        run: |
          git clone --depth=1 https://github.com/sisong/HDiffPatch.git ../HDiffPatch
      - name: buildByXcode
        run: |
          xcodebuild -workspace builds/xcode/tinyuz.xcworkspace -scheme tinyuz -configuration Release OBJROOT=$PWD/bin SYMROOT=$PWD/bin

  vc-build:
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@v2
      - uses: microsoft/setup-msbuild@v1.1
        with:
          msbuild-architecture: x64
      - name: initAndClone
        run: |
          git clone --depth=1 https://github.com/sisong/HDiffPatch.git ../HDiffPatch
          git clone --depth=1 https://github.com/sisong/zlib.git ../zlib
      - name: buildByVC
        run: |
          msbuild builds/vc2019/tinyuz.sln -t:rebuild -verbosity:diag -property:Configuration=Release
